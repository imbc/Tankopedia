jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        ## Enable an encoder for the traditional form login
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        ## We're using the FOS User bundle's provider for the traditional form login.
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login$
            security: false
        main:
            ## Configure your main firewall to use both the form login and OAuth.
            ## In this example we're enabling two commonly used OAuth providers.
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                login_path: /login
                check_path: /login_check
                default_target_path: /
            oauth:
                resource_owners:
                    facebook:      /login/check-facebook
                    twitter:       /login/check-twitter
                login_path:        /login
                failure_path:      /login
                default_target_path: /
                ## Tell your firewall which provider will manage users for the OAuth login:
                oauth_user_provider:
                    service: uf.security.oauth_user_provider
            logout:
                path: /logout
                target: /
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
